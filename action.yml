---
name: "Deployments Action"
author: "EchoesHQ"
description: "Declare deployments and notify their status to Echoes."
inputs:
  version:
    description: "Version being deployed. Defaults to tag."
    required: false
  deliverables:
    description: "Newline-separated list of deliverables the deployment contains (e.g., microservice name, application name)..."
    required: false
  commits:
    description: "Newline-separated list of commits SHA shipped as part of the deployment. Defaults to listing commits between the last 2 tags."
    required: false
  url:
    description: "URL related to the deployment: URL to a tag, to an artefact..."
    required: false

  action-type:
    description: "Type of action to take: posting a deployment or posting the status of a deployment"
    required: false
    default: "post-deploy"

  status:
    description: "Status of the deployment: failure or success."
    required: true
  deployment-id:
    description: "ID of the deployment."
    required: true

outputs:
  deployment_id:
    description: "The deployment ID created by Echoes."

runs:
  using: "docker"
  image: "Dockerfile"
  args:
    # to avoid having invalid arguments in getopts we artificially introduce a space (trimmed later on)
    - -t ${{ inputs.action-type }}
    - -v ${{ inputs.version }}
    - -n ${{ inputs.name }}
    - -d ${{ inputs.deliverables }}
    - -c ${{ inputs.commits }}
    - -u ${{ inputs.url }}
    - -s ${{ inputs.status }}
    - -i ${{ inputs.deployment-id }}
